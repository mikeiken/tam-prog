## SECRETS --==================================
RABBITMQ_DEFAULT_USER=
RABBITMQ_DEFAULT_PASS=
# ---
POSTGRES_USER=
POSTGRES_PASSWORD=
POSTGRES_DB=
# ---
REDIS_PASS=
REDIS_COMMANDER_USER=
REDIS_COMMANDER_PASS=
# ---
DJANGO_SUPER_USER=
DJANGO_SUPER_PASSWORD=
DJANGO_SECRET_KEY=
# ---

## SETTINGS --==================================
RABBITMQ_WEB_UI_PORT=15672
RABBITMQ_PORT=5672
RABBITMQ_HOST=rabbitmq
RABBITMQ_VHOST=/
# ---
POSTGRES_PORT=5432
# ---
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443
# ---
REDIS_PORT=6379
REDIS_MAXMEMORY=256mb
REDIS_COMMANDER_PORT=8081
# ---
PORTAINER_PORT=9000
# ---
SWAGGER_PORT=8956
# ---
NODEJS_PORT=3000
# ---
DJANGO_PORT=8000
DJANGO_DB_HOST=psql
# Web debug interface [True/>False<]
DJANGO_DEBUG=True
DJANGO_ALLOWED_HOSTS=127.0.0.1,localhost,django
DJANGO_ASYNC_TIMEOUT_S=30
# ---
# Whether to retry failed connections to the broker on startup [>True</False]
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=True
# Whether to retry failed connections to the broker [>True</False]
CELERY_BROKER_CONNECTION_RETRY=True
CELERY_BROKER_CONNECTION_MAX_RETRIES=10
CELERY_BROKER_HEARTBEAT=10
CELERY_RESULT_BACKEND=rpc://
# Late ack means the task messages will be acknowledged after the task has been executed, not right before [>True</False]
CELERY_TASK_ACKS_LATE=True
# Run tasks synchronously [True/>False<]
CELERY_TASK_ALWAYS_EAGER=False
# Worker process:
# [
#     'solo'        - single process
#    >'prefork'<    - multiple processes (linux only)
# ]
CELERY_WORKER_POOL=prefork
# Restart worker after each task [>4</tasks]
CELERY_WORKER_MAX_TASKS_PER_CHILD=4
# Number of worker processes [>2</precesses]
CELERY_WORKER_CONCURRENCY=2
# Number of tasks to prefetch [>2</tasks]
CELERY_WORKER_PREFETCH_MULTIPLIER=2
# Whether to store the task return values or not (tombstones) [True/>False<]
CELERY_TASK_IGNORE_RESULT=False
# Configure task logging [True/>False<]
CELERY_WORKER_REDIRECT_STDOUTS=False
# Log level for task logs [DEBUG/>INFO</WARNING/ERROR/CRITICAL]
CELERY_WORKER_REDIRECT_STDOUTS_LEVEL=INFO
# Custom logging format for tasks
CELERY_WORKER_TASK_LOG_FORMAT=[%(asctime)s: %(levelname)s] Task %(task_name)s[%(task_id)s]: %(message)s