services:
  nginx:
    build: ./nginx
    image: tam-prog-nginx:latest
    container_name: nginx
    networks:
      - gateway
    ports:
      - '${NGINX_HTTP_PORT}:80'
      - '${NGINX_HTTPS_PORT}:443'
    restart: always
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  psql:
    container_name: psql
    build: ./psql
    image: tam-prog-psql:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - /usr/tamprog/db-init:/docker-entrypoint-initdb.d
      - /usr/tamprog/db:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '${POSTGRES_CPUS}'
          memory: ${POSTGRES_MEMORY}
    networks:
      - gateway
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_HEALTHCHECK_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - /usr/tamprog/rabbitmq:/var/lib/rabbitmq
    ports:
      - ${RABBITMQ_WEBGUI_PORT}:15672
      - ${RABBITMQ_PORT}:5672
    networks:
      - gateway
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl start_app && rabbitmqctl status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  gateway: {}