services:
  nginx:
    image: ghcr.io/mikeiken/tam-prog-nginx:latest
    container_name: nginx
    networks:
      - gateway
    ports:
      - '${NGINX_HTTP_PORT}:80'
      - '${NGINX_HTTPS_PORT}:443'
    restart: always
    depends_on:
      - frontend
      - redis-commander
      - django
      - rabbitmq

  psql:
    container_name: psql
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - db-data:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: always
    networks:
      - gateway
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3.10-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - rabbit-data:/var/lib/rabbitmq
    ports:
      - ${RABBITMQ_WEB_UI_PORT}:15672
      - ${RABBITMQ_PORT}:5672
    networks:
      - gateway
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl start_app && rabbitmqctl status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:7.4-alpine
    container_name: redis
    hostname: redis
    restart: always
    environment:
      - REDIS_PASS=${REDIS_PASS}
      - REDIS_MAXMEMORY_POLICY="allkeys-lru"
      - REDIS_MAXMEMORY="${REDIS_MAXMEMORY}"
    volumes:
      - redis-data:/data
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - gateway
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: ghcr.io/joeferner/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=${REDIS_COMMANDER_USER}
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASS}
    ports:
      - "${REDIS_COMMANDER_PORT}:8081"
    user: redis
    networks:
      - gateway
    depends_on:
      - redis

  frontend:
    image: ghcr.io/mikeiken/tam-prog-frontend:latest
    container_name: frontend
    networks:
      - gateway
    ports:
      - "${NODEJS_PORT}:3000"
    restart: always

  django:
    image: ghcr.io/mikeiken/tam-prog-django:latest
    container_name: django
    networks:
      - gateway
    ports:
      - "${DJANGO_PORT}:8000"
    restart: always
    env_file:
      - .env
    environment:
      - IS_IN_CONTAINER=true
    depends_on:
      - redis
      - psql
      - rabbitmq

networks:
  gateway:
    driver: bridge

volumes:
  db-data:
    driver: local
  rabbit-data:
    driver: local
  redis-data:
    driver: local